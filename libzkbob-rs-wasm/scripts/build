#!/usr/bin/env bash

PARENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )"

function build () {
  DIR=$3
  wasm-pack build --release --target $1 -d $DIR -- --features $1 --features $2
  # Optimize the binary, since wasm-pack refuses to see wasm-opt
  wasm-opt -o $PARENT_DIR/$DIR/wasm-opt.wasm -O3 --debuginfo $PARENT_DIR/$DIR/libzkbob_rs_wasm_bg.wasm && mv $PARENT_DIR/$DIR/wasm-opt.wasm $PARENT_DIR/$DIR/libzkbob_rs_wasm_bg.wasm
  # Patch typings for async methods
  sed -i.bak -E 's/(createDeposit\(.*\)):.*$/\1: Promise<TransactionData>;/g' $PARENT_DIR/$DIR/libzkbob_rs_wasm.d.ts
  sed -i.bak -E 's/(createDepositPermittable\(.*\)):.*$/\1: Promise<TransactionData>;/g' $PARENT_DIR/$DIR/libzkbob_rs_wasm.d.ts
  sed -i.bak -E 's/(createTransfer\(.*\)):.*$/\1: Promise<TransactionData>;/g' $PARENT_DIR/$DIR/libzkbob_rs_wasm.d.ts
  sed -i.bak -E 's/(createTransferOptimistic\(.*\)):.*$/\1: Promise<TransactionData>;/g' $PARENT_DIR/$DIR/libzkbob_rs_wasm.d.ts
  sed -i.bak -E 's/(createWithdraw\(.*\)):.*$/\1: Promise<TransactionData>;/g' $PARENT_DIR/$DIR/libzkbob_rs_wasm.d.ts
  sed -i.bak -E 's/(createWithdrawalOptimistic\(.*\)):.*$/\1: Promise<TransactionData>;/g' $PARENT_DIR/$DIR/libzkbob_rs_wasm.d.ts
  # Remove invalid typings
<<<<<<< HEAD
  sed -i.bak -E '/BroccoliDestroyInstance/d' $PARENT_DIR/$1/libzkbob_rs_wasm.d.ts
  sed -i.bak -E '/BroccoliDestroyInstance/d' $PARENT_DIR/$1/libzkbob_rs_wasm_bg.wasm.d.ts
  
  rm $PARENT_DIR/$1/libzkbob_rs_wasm_bg.wasm.d.ts
  
=======
  sed -i.bak -E '/BroccoliDestroyInstance/d' $PARENT_DIR/$DIR/libzkbob_rs_wasm.d.ts
  sed -i.bak -E '/BroccoliDestroyInstance/d' $PARENT_DIR/$DIR/libzkbob_rs_wasm_bg.wasm.d.ts
>>>>>>> 2ae354f... Add multicore/singlecore builds
  # Patch package.json, since wasm-pack doesn't allow renaming packages
  sed -i.bak -E "s/\"name\": \"libzkbob-rs-wasm\"/\"name\": \"libzkbob-rs-wasm-$DIR\"/g" $PARENT_DIR/$DIR/package.json
  # Add workerHelpers.js in package.json
  if [ $2 = "multicore" ]
  then
    pushd $PARENT_DIR/$DIR > /dev/null
      echo "`jq --arg WORKER_JS $(find . -name "workerHelpers.js" | sed -e "s/^.\///") '.files[.files| length] |= . + $WORKER_JS' package.json`" > package.json
    popd > /dev/null
  fi
}

build web "" web
build web multicore web-multicore
#build bundler
#build nodejs
