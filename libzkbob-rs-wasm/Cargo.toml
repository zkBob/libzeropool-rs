[package]
name = "libzkbob-rs-wasm"
description = "A higher level zkBob API for Wasm"
version = "1.7.0"
authors = ["Dmitry Vdovin <voidxnull@gmail.com>"]
repository = "https://github.com/zkBob/libzkbob-rs/"
license = "MIT OR Apache-2.0"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]
bundler = ["libzkbob-rs/web"]
web = ["libzkbob-rs/web"]
nodejs = ["libzkbob-rs/node"]
multicore = ["fawkes-crypto/multicore", "wasm-bindgen-rayon"]

[dependencies]
wasm-bindgen = { version = "0.2.90" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

libzkbob-rs = { path = "../libzkbob-rs" }
getrandom = { version = "0.2.3", features = ["js"] }
bs58 = "0.4.0"
kvdb-web = { version = "0.9.0", path = "../libs/kvdb-web"}
kvdb = "0.9.0"
kvdb-memorydb = "0.9.0"
byteorder = "1.4.3"
wasm-bindgen-futures = "0.4.40"
serde = "1.0.195"
serde_bytes = "0.11.14"
sha3 = "0.9.1"
thiserror = "1.0.26"
serde-wasm-bindgen = "0.6.3"
lazy_static = "1.4.0"
hex = { version = "0.4.3", features = ["serde"] }
js-sys = "0.3.55"
wasm-bindgen-rayon = { version = "1.2.1", optional = true }
rayon = "1.8.1"
bincode = "1.3.3"
web-sys = "0.3.61"

[dependencies.fawkes-crypto]
git = "https://github.com/zkBob/fawkes-crypto"
branch = "master"
package = "fawkes-crypto-zkbob"
version = "4.7.0"
features = ["wasm", "serde_support"]


[dev-dependencies]
wasm-bindgen-test = "0.3.40"
test-case = "1.2.0"
rand = "0.8.4"
serde_json = "1.0.111"
wasm-bindgen = { version = "0.2.90", features = ["serde-serialize"] }

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

# Until wasm-pack learns how to find wasm-opt in PATH
[package.metadata.wasm-pack.profile.dev]
wasm-opt = false

[package.metadata.wasm-pack.profile.profiling]
wasm-opt = false

[package.metadata.wasm-pack.profile.release]
wasm-opt = false

